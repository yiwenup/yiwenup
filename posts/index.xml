<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>所有文章 - Yiwenup - 持续沉淀</title><link>http://www.yiwenup.cloud/posts/</link><description>所有文章 | Yiwenup - 持续沉淀</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>97035457@qq.com (yiwenup)</managingEditor><webMaster>97035457@qq.com (yiwenup)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 10 May 2024 13:50:32 +0800</lastBuildDate><atom:link href="http://www.yiwenup.cloud/posts/" rel="self" type="application/rss+xml"/><item><title>06 Nginx启用一致性Hash策略</title><link>http://www.yiwenup.cloud/nginx%E5%90%AF%E7%94%A8%E4%B8%80%E8%87%B4%E6%80%A7hash%E7%AD%96%E7%95%A5/</link><pubDate>Fri, 10 May 2024 13:50:32 +0800</pubDate><author>作者</author><guid>http://www.yiwenup.cloud/nginx%E5%90%AF%E7%94%A8%E4%B8%80%E8%87%B4%E6%80%A7hash%E7%AD%96%E7%95%A5/</guid><description>一、原生安装 首先要保证能以原生方式make install过了Nginx并且能够正常启动 下载个人开发的Nginx扩展模块https://git</description></item><item><title>Freemarker自定义指令与场景</title><link>http://www.yiwenup.cloud/freemarker%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E4%BB%A4%E4%B8%8E%E5%9C%BA%E6%99%AF/</link><pubDate>Fri, 23 Feb 2024 16:50:22 +0800</pubDate><author>作者</author><guid>http://www.yiwenup.cloud/freemarker%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E4%BB%A4%E4%B8%8E%E5%9C%BA%E6%99%AF/</guid><description>一、Freemarker 自定义指令 TemplateDirectiveModel 接口是 Freemarker 自定标签或者自定义指令的核心处理接口。通过实现该接口，用户可以自定义标签（指令）进行任意操作， 任</description></item><item><title>基于SPI的热插拔实现</title><link>http://www.yiwenup.cloud/%E7%83%AD%E6%8F%92%E6%8B%94%E7%AD%96%E7%95%A5%E5%AE%9E%E7%8E%B0/</link><pubDate>Mon, 22 Jan 2024 22:22:57 +0800</pubDate><author>作者</author><guid>http://www.yiwenup.cloud/%E7%83%AD%E6%8F%92%E6%8B%94%E7%AD%96%E7%95%A5%E5%AE%9E%E7%8E%B0/</guid><description>一、前置知识 SPI即Service Provider Interface，是一种用来被第三方实现或者扩展的接口，它可以用来启用框架扩展和替换组件，本质上是基于</description></item><item><title>06 HTTPS安全原理</title><link>http://www.yiwenup.cloud/https%E5%AE%89%E5%85%A8%E5%8E%9F%E7%90%86/</link><pubDate>Wed, 15 Nov 2023 21:37:34 +0800</pubDate><author>作者</author><guid>http://www.yiwenup.cloud/https%E5%AE%89%E5%85%A8%E5%8E%9F%E7%90%86/</guid><description>一、概述 HTTPS并非是应用层一个新的协议，通常HTTP直接和TCP通信，HTTPS则先和安全层（SSL/TLS）通信，然后安全层再和TCP</description></item><item><title>05 HTTP2特性</title><link>http://www.yiwenup.cloud/http2%E7%89%B9%E6%80%A7/</link><pubDate>Wed, 15 Nov 2023 20:37:34 +0800</pubDate><author>作者</author><guid>http://www.yiwenup.cloud/http2%E7%89%B9%E6%80%A7/</guid><description>一、二进制分帧 二进制分帧是HTTP/2的一项核心特性。在二进制分帧层上，HTTP/2会将所有传输的信息分割为更小的消息（Message）和帧</description></item><item><title>04 TCP性能分析</title><link>http://www.yiwenup.cloud/tcp%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90/</link><pubDate>Tue, 14 Nov 2023 20:37:34 +0800</pubDate><author>作者</author><guid>http://www.yiwenup.cloud/tcp%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90/</guid><description>一、TCP时延分析 HTTP协议构建于TCP协议之上， 所以HTTP事务的性能在很大程度上取决于底层TCP通道的性能。 HTTP事务的时延有以下几</description></item><item><title>default-fake-certificate.pem: permission denied</title><link>http://www.yiwenup.cloud/record4/</link><pubDate>Tue, 14 Nov 2023 16:30:40 +0800</pubDate><author>作者</author><guid>http://www.yiwenup.cloud/record4/</guid><description>一、问题描述 由于公司安全部门的漏洞扫描，所负责的平台中部分k8s节点存在漏洞CVE-2020-11724，需要升级quay.io/kuber</description></item><item><title>03 TCP传输</title><link>http://www.yiwenup.cloud/tcp%E4%BC%A0%E8%BE%93/</link><pubDate>Mon, 13 Nov 2023 20:37:34 +0800</pubDate><author>作者</author><guid>http://www.yiwenup.cloud/tcp%E4%BC%A0%E8%BE%93/</guid><description>一、传输原理 TCP是一种端到端的传输协议，通过“发送-应答”机制来保证传输的可靠性。 TCP的传输是分段的，一个HTTP请求报文会被操作系统切</description></item><item><title>02 TCP连接</title><link>http://www.yiwenup.cloud/tcp%E8%BF%9E%E6%8E%A5/</link><pubDate>Sun, 12 Nov 2023 20:37:34 +0800</pubDate><author>作者</author><guid>http://www.yiwenup.cloud/tcp%E8%BF%9E%E6%8E%A5/</guid><description>HTTP 通信由 TCP/IP 承载的， TCP/IP 是全球计算机及网络设备都在使用的一种常用的分组交换网络分层协议集。客户端应用程序可以打开一条 TCP/IP 连接，连接到可能运行在世界</description></item><item><title>01 HTTP协议</title><link>http://www.yiwenup.cloud/http%E5%8D%8F%E8%AE%AE/</link><pubDate>Sat, 11 Nov 2023 20:37:34 +0800</pubDate><author>作者</author><guid>http://www.yiwenup.cloud/http%E5%8D%8F%E8%AE%AE/</guid><description>一、HTTP报文了解 HTTP 报文是在 HTTP 应用程序之间发送的数据块（ 用于 HTTP 协议交互的信息）。请求端（客户端）的 HTTP 报文叫做请求报文，响应端（服务器端）的</description></item></channel></rss>