<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Yiwenup - 持续沉淀</title><link>http://www.yiwenup.cloud/</link><description>Yiwenup - 持续沉淀</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>97035457@qq.com (yiwenup)</managingEditor><webMaster>97035457@qq.com (yiwenup)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 23 Feb 2024 16:50:22 +0800</lastBuildDate><atom:link href="http://www.yiwenup.cloud/index.xml" rel="self" type="application/rss+xml"/><item><title>Freemarker自定义指令与场景</title><link>http://www.yiwenup.cloud/freemarker%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E4%BB%A4%E4%B8%8E%E5%9C%BA%E6%99%AF/</link><pubDate>Fri, 23 Feb 2024 16:50:22 +0800</pubDate><author>作者</author><guid>http://www.yiwenup.cloud/freemarker%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E4%BB%A4%E4%B8%8E%E5%9C%BA%E6%99%AF/</guid><description>一、Freemarker 自定义指令 TemplateDirectiveModel 接口是 Freemarker 自定标签或者自定义指令的核心处理接口。通过实现该接口，用户可以自定义标签（指令）进行任意操作， 任</description></item><item><title>基于SPI的热插拔实现</title><link>http://www.yiwenup.cloud/%E7%83%AD%E6%8F%92%E6%8B%94%E7%AD%96%E7%95%A5%E5%AE%9E%E7%8E%B0/</link><pubDate>Mon, 22 Jan 2024 22:22:57 +0800</pubDate><author>作者</author><guid>http://www.yiwenup.cloud/%E7%83%AD%E6%8F%92%E6%8B%94%E7%AD%96%E7%95%A5%E5%AE%9E%E7%8E%B0/</guid><description>一、前置知识 SPI即Service Provider Interface，是一种用来被第三方实现或者扩展的接口，它可以用来启用框架扩展和替换组件，本质上是基于</description></item><item><title>default-fake-certificate.pem: permission denied</title><link>http://www.yiwenup.cloud/record4/</link><pubDate>Tue, 14 Nov 2023 16:30:40 +0800</pubDate><author>作者</author><guid>http://www.yiwenup.cloud/record4/</guid><description>一、问题描述 由于公司安全部门的漏洞扫描，所负责的平台中部分k8s节点存在漏洞CVE-2020-11724，需要升级quay.io/kuber</description></item><item><title>整合原生 SSM</title><link>http://www.yiwenup.cloud/%E6%95%B4%E5%90%88%E5%8E%9F%E7%94%9Fssm/</link><pubDate>Thu, 20 Oct 2022 19:12:32 +0800</pubDate><author>作者</author><guid>http://www.yiwenup.cloud/%E6%95%B4%E5%90%88%E5%8E%9F%E7%94%9Fssm/</guid><description>整合原生 SSM SSM指代SpringMVC、Spring、Mybatis，本次尝试以原生的方式进行整合，一方面是回顾历史了解SSM的过往，另一方</description></item><item><title>Spring Data JPA</title><link>http://www.yiwenup.cloud/springdatajpa/</link><pubDate>Thu, 20 Oct 2022 13:45:20 +0800</pubDate><author>作者</author><guid>http://www.yiwenup.cloud/springdatajpa/</guid><description>一、Spring Data JPA 认识 Spring Data JPA是在JPA规范之上封装的一个DAO层的框架。 JPA是一个持久层的规范，全称为Java Persistent API，在这个规范之</description></item><item><title>04_Spring MVC 附录</title><link>http://www.yiwenup.cloud/springmvc%E9%99%84%E5%BD%95/</link><pubDate>Mon, 10 Oct 2022 19:12:32 +0800</pubDate><author>作者</author><guid>http://www.yiwenup.cloud/springmvc%E9%99%84%E5%BD%95/</guid><description>Spring MVC 附录 一、中文乱码解决 1.1 页面乱码 对于原生Spring MVC的使用过程中，最原始的模版引擎是JSP渲染页面，若出现中文乱码，如下图所示： 则需</description></item><item><title>03_Spring MVC 源码分析</title><link>http://www.yiwenup.cloud/springmvc%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</link><pubDate>Fri, 07 Oct 2022 19:12:32 +0800</pubDate><author>作者</author><guid>http://www.yiwenup.cloud/springmvc%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</guid><description>Spring MVC 源码分析 一、主流程梳理 根据Spring MVC依然是针对JavaEE的封装这个思路，而传统JavaEE开发是通过实现javax.servl</description></item><item><title>Java远程断点</title><link>http://www.yiwenup.cloud/java%E8%BF%9C%E7%A8%8B%E6%96%AD%E7%82%B9/</link><pubDate>Thu, 29 Sep 2022 10:06:25 +0800</pubDate><author>作者</author><guid>http://www.yiwenup.cloud/java%E8%BF%9C%E7%A8%8B%E6%96%AD%E7%82%B9/</guid><description>一、场景引入 在团队进行分布式微服务开发的过程中： 若服务的复杂性达到了一定的程度，比如完成一个功能需要几个服务配合才可以进行，此时前后端联调，</description></item><item><title>03 Tomcat类加载机制</title><link>http://www.yiwenup.cloud/tomcat%E7%B1%BB%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6/</link><pubDate>Tue, 20 Sep 2022 22:22:43 +0800</pubDate><author>作者</author><guid>http://www.yiwenup.cloud/tomcat%E7%B1%BB%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6/</guid><description>一、JVM类加载回顾 在 JVM 原本的类加载机制中，会有 BoostrapClassLoader、ExtClassLoader、AppClassLoa</description></item><item><title>gRpc入门</title><link>http://www.yiwenup.cloud/grpc%E5%85%A5%E9%97%A8/</link><pubDate>Mon, 29 Aug 2022 11:24:29 +0800</pubDate><author>作者</author><guid>http://www.yiwenup.cloud/grpc%E5%85%A5%E9%97%A8/</guid><description>一、概述 官网：https://grpc.io/docs/ gRpc 是一个高性能、开源和通用的RPC 框架，面向移动和HTTP/2设计。 gRPC基于HT</description></item></channel></rss>